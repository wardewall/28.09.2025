definitions:
  domain.Order:
    properties:
      created_at:
        type: string
      customer_name:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/domain.OrderItem'
        type: array
      status:
        $ref: '#/definitions/domain.OrderStatus'
      updated_at:
        type: string
    type: object
  domain.OrderItem:
    properties:
      product_id:
        type: integer
      quantity:
        type: integer
    type: object
  domain.OrderStatus:
    enum:
    - Pending
    - Confirmed
    - Cancelled
    type: string
    x-enum-varnames:
    - OrderStatusPending
    - OrderStatusConfirmed
    - OrderStatusCancelled
  domain.Product:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      stock:
        type: integer
    type: object
  httpapi.createOrderReq:
    properties:
      customer_name:
        type: string
      items:
        items:
          $ref: '#/definitions/domain.OrderItem'
        type: array
    type: object
  httpapi.createProductReq:
    properties:
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      stock:
        type: integer
    type: object
  httpapi.partialReturnReq:
    properties:
      items:
        items:
          $ref: '#/definitions/domain.OrderItem'
        type: array
    type: object
  httpapi.updateProductReq:
    properties:
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
info:
  contact: {}
paths:
  /orders:
    post:
      consumes:
      - application/json
      parameters:
      - description: Order
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpapi.createOrderReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Order'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create order
      tags:
      - orders
  /orders/{id}:
    get:
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Order'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get order by id
      tags:
      - orders
  /orders/{id}/cancel:
    post:
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Order'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cancel order
      tags:
      - orders
  /orders/{id}/partial-return:
    post:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Return items
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpapi.partialReturnReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Order'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Partial return
      tags:
      - orders
  /products:
    get:
      parameters:
      - description: Name contains
        in: query
        name: q
        type: string
      - description: Min price
        in: query
        name: min_price
        type: number
      - description: Max price
        in: query
        name: max_price
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Product'
            type: array
      summary: List products
      tags:
      - products
    post:
      consumes:
      - application/json
      parameters:
      - description: Product
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpapi.createProductReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create product
      tags:
      - products
  /products/{id}:
    delete:
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete product
      tags:
      - products
    get:
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get product by id
      tags:
      - products
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/httpapi.updateProductReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update product
      tags:
      - products
swagger: "2.0"
